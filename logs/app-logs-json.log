{"@timestamp":"2022-05-31T20:22:51.142+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 12590 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:51.166+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:52.522+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:52.691+09:00","@version":"1","message":"Finished Spring Data repository scanning in 146 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:53.735+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:53.749+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:53.749+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:53.750+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:53.974+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:53.977+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2750 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:54.377+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:54.506+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:54.946+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:55.161+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:56.081+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:56.183+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:58.070+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:22:58.086+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:00.339+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:23:01.497+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:01.535+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:01.554+09:00","@version":"1","message":"Started OrderApiApplication in 11.546 seconds (JVM running for 13.936)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:01.844+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:23:02.230+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:23:02.551+09:00","@version":"1","message":"Attempting to connect to: [34.64.89.15:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:02.775+09:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#37a0fc8c:0/SimpleConnection@29713008 [delegate=amqp://guest@34.64.89.15:5672/, localPort= 59868]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:02.869+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:23:02.989+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:23:03.026+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:23:03.064+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:23:50.191+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:50.194+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:23:50.211+09:00","@version":"1","message":"Completed initialization in 17 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:24:03.618+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:03.921+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:17.491+09:00","@version":"1","message":"Request method 'POST' not supported","logger_name":"org.springframework.web.servlet.PageNotFound","thread_name":"http-nio-8080-exec-4","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:24:26.053+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:26.131+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:31.080+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:31.121+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:32.218+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:32.258+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:33.262+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:33.323+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:34.200+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:34.253+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:37.223+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:38.276+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:39.152+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:40.092+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:40.928+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:41.937+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:43.327+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:44.342+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:24:45.174+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:25:04.293+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:25:04.394+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:25:05.890+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:04.701+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:04.824+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:16.029+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:16.049+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:16.102+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:24.134+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 12697 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:24.141+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.061+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.174+09:00","@version":"1","message":"Finished Spring Data repository scanning in 104 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.879+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.888+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.888+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.888+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:25.999+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.000+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1817 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.204+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.256+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.333+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.377+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.866+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:26.878+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:27.378+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:27.385+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:28.192+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:26:28.677+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:28.697+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:28.717+09:00","@version":"1","message":"Started OrderApiApplication in 5.406 seconds (JVM running for 6.538)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:28.895+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:29.077+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:47.678+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:47.680+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:47.686+09:00","@version":"1","message":"Completed initialization in 6 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:26:48.040+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:49.453+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:50.506+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:51.565+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:52.719+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:53.743+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:26:54.701+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:29.479+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:29.710+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:29.991+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:33.214+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:34.784+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:36.499+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:37.974+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:27:39.506+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:28:30.221+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:28:30.331+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:29:30.657+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:29:30.834+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:06.860+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:06.880+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:06.907+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:18.700+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 12923 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:18.711+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:19.663+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:19.802+09:00","@version":"1","message":"Finished Spring Data repository scanning in 121 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.413+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.422+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.423+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.423+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.545+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.546+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1787 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.787+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.814+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.898+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:20.943+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:21.572+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:21.598+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:22.430+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:22.438+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:23.598+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:30:24.361+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:24.404+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:24.440+09:00","@version":"1","message":"Started OrderApiApplication in 6.757 seconds (JVM running for 7.752)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:24.741+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:25.025+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:32.339+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:32.341+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:32.352+09:00","@version":"1","message":"Completed initialization in 11 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:30:32.609+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:35.368+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:36.418+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:37.440+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:39.109+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:40.964+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:41.023+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:41.934+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:41.975+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:42.740+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:42.934+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:44.102+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:44.157+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:45.666+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:45.731+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:47.217+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:48.219+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:30:48.952+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:31:25.663+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:31:26.034+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:32:26.345+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:32:26.459+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:32:43.862+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:32:43.935+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:32:44.103+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:32.660+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 13101 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:32.677+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:33.907+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.008+09:00","@version":"1","message":"Finished Spring Data repository scanning in 87 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.731+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.739+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.740+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.740+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.861+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:34.861+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2118 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:35.006+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:33:35.255+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:35.283+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:35.392+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:35.443+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:36.068+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:36.087+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:36.600+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:36.605+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:37.461+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:33:37.972+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:37.989+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:38.012+09:00","@version":"1","message":"Started OrderApiApplication in 6.356 seconds (JVM running for 8.171)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:33:38.206+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:33:38.379+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:03.023+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:34:03.029+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:34:03.106+09:00","@version":"1","message":"Completed initialization in 76 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:34:03.652+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:03.931+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:34:22.954+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:23.196+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:24.587+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:24.635+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:25.495+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:25.645+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:26.365+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:26.434+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:27.449+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:27.491+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:38.650+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:34:39.006+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:35:06.433+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:35:06.884+09:00","@version":"1","message":"http://192.168.35.102/products\nBrandonui-MacBookAir.local\n <INPUT JSON>\n","logger_name":"com.brandon.exception.CustomizedResponseEntityExceptionHandler","thread_name":"http-nio-8080-exec-5","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T20:35:27.185+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:35:27.345+09:00","@version":"1","message":"http://192.168.35.102/products\nBrandonui-MacBookAir.local\n <INPUT JSON>\n","logger_name":"com.brandon.exception.CustomizedResponseEntityExceptionHandler","thread_name":"http-nio-8080-exec-7","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T20:35:39.329+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:35:39.431+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:35:51.343+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:35:51.606+09:00","@version":"1","message":"http://192.168.35.102/products\nBrandonui-MacBookAir.local\n <INPUT JSON>\n","logger_name":"com.brandon.exception.CustomizedResponseEntityExceptionHandler","thread_name":"http-nio-8080-exec-9","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T20:36:39.889+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:36:39.995+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:36:44.872+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:36:45.124+09:00","@version":"1","message":"http://192.168.35.102/products\nBrandonui-MacBookAir.local\n <INPUT JSON>\n","logger_name":"com.brandon.exception.CustomizedResponseEntityExceptionHandler","thread_name":"http-nio-8080-exec-6","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T20:37:02.121+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:02.134+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:02.164+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:02.188+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:37:13.490+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 13240 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:13.509+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:15.109+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:15.248+09:00","@version":"1","message":"Finished Spring Data repository scanning in 131 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:17.509+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:17.523+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:17.524+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:17.524+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:17.825+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:17.826+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 4235 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:18.034+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:37:18.319+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:18.364+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:18.492+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:18.567+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:19.125+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:19.175+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:20.306+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:20.322+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:21.915+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:37:22.605+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:22.631+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:22.667+09:00","@version":"1","message":"Started OrderApiApplication in 10.189 seconds (JVM running for 11.272)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:22.933+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:37:23.164+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:37:41.190+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:41.197+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:41.224+09:00","@version":"1","message":"Completed initialization in 27 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:37:41.549+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:37:41.853+09:00","@version":"1","message":"http://218.38.137.27/products\nBrandonui-MacBookAir.local\n <INPUT JSON>\n","logger_name":"com.brandon.exception.CustomizedResponseEntityExceptionHandler","thread_name":"http-nio-8080-exec-2","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T20:37:51.175+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:37:51.342+09:00","@version":"1","message":"http://218.38.137.27/products\nBrandonui-MacBookAir.local\n <INPUT JSON>\n","logger_name":"com.brandon.exception.CustomizedResponseEntityExceptionHandler","thread_name":"http-nio-8080-exec-4","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T20:38:23.406+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:38:23.556+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:38:40.475+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:40.497+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:40.547+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:55.527+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 13325 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:55.547+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:56.898+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:57.019+09:00","@version":"1","message":"Finished Spring Data repository scanning in 109 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.010+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.021+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.022+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.023+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.171+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.172+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2547 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.308+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:38:58.538+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.571+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.645+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:58.705+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:59.449+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:59.468+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:59.968+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:38:59.973+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:00.829+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:39:01.354+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:01.381+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:01.412+09:00","@version":"1","message":"Started OrderApiApplication in 7.181 seconds (JVM running for 8.567)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:01.578+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:39:01.740+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:39:05.701+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:05.707+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:05.718+09:00","@version":"1","message":"Completed initialization in 11 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:39:05.954+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:39:13.382+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:39:13.754+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:39:31.961+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:39:39.945+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:40:02.019+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:40:02.145+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:40:28.669+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:28.691+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:28.762+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:28.794+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:40:51.401+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 13419 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:51.416+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:52.947+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:53.061+09:00","@version":"1","message":"Finished Spring Data repository scanning in 96 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.029+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.040+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.040+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.040+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.203+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.203+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2715 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.399+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:40:54.842+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:54.961+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:55.407+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:55.585+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:56.511+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:56.602+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:57.925+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:40:57.959+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:01.040+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:41:02.649+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:02.734+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:02.776+09:00","@version":"1","message":"Started OrderApiApplication in 12.322 seconds (JVM running for 13.357)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:03.203+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:03.832+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:15.216+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:15.224+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:15.328+09:00","@version":"1","message":"Completed initialization in 103 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:41:15.912+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:20.149+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:21.654+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:29.639+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:29.722+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:31.001+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:31.046+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:32.015+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:32.069+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:32.816+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:32.859+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:33.876+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:33.937+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:35.556+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:41:35.866+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:42:00.782+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?,\n        ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:00.838+09:00","@version":"1","message":"\n    select\n        count(product0_.product_id) as col_0_0_ \n    from\n        product product0_","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:04.088+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:04.187+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:08.472+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:10.046+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:26.673+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:45.682+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:47.660+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:42:56.567+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:43:04.522+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:43:04.752+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:43:41.134+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:44:05.197+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:44:05.349+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:44:30.674+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:44:46.616+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:45:05.719+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:45:05.942+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:46:06.222+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:46:06.337+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:47:06.691+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:47:06.949+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:48:07.428+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:48:07.607+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:49:08.188+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:49:08.374+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:50:09.085+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:50:09.400+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:50:10.589+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:10.636+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:10.763+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:10.842+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:50:33.821+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 13849 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:33.843+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:35.499+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:35.654+09:00","@version":"1","message":"Finished Spring Data repository scanning in 133 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:36.903+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:36.919+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:36.920+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:36.920+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:37.260+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:37.261+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3345 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:37.531+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:50:37.872+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:37.967+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:38.304+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:38.394+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:39.079+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:39.099+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:39.679+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:39.685+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:40.652+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:50:41.392+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:41.413+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:41.441+09:00","@version":"1","message":"Started OrderApiApplication in 9.021 seconds (JVM running for 10.158)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:50:41.621+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:50:41.868+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:51:06.585+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:51:06.603+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:51:06.681+09:00","@version":"1","message":"Completed initialization in 78 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:51:07.120+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:51:07.469+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:51:26.911+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:51:27.092+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:51:37.405+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:51:37.669+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:51:42.183+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:51:42.283+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:52:42.782+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:52:42.884+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:53:32.707+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        category1_.category_id as category1_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.name as name2_0_1_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:53:33.002+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:53:43.203+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:53:43.357+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:53:43.713+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:43.727+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:43.790+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:43.802+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:53:53.333+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 14034 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:53.346+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:54.876+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.036+09:00","@version":"1","message":"Finished Spring Data repository scanning in 148 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.795+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.804+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.805+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.805+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.942+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:55.943+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2531 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:56.085+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:53:56.307+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:56.337+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:56.435+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:56.487+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:57.168+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:57.202+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:57.995+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:58.001+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:58.921+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:53:59.458+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:59.473+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:59.491+09:00","@version":"1","message":"Started OrderApiApplication in 7.794 seconds (JVM running for 9.216)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:53:59.669+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:53:59.996+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:54:09.112+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:54:09.118+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:54:09.125+09:00","@version":"1","message":"Completed initialization in 7 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:54:09.458+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:54:09.723+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:55:00.285+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:55:00.377+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:56:00.600+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:56:00.703+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:57:01.051+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:57:01.174+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:57:59.383+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:57:59.406+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:57:59.454+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:57:59.480+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:58:13.254+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 14211 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:13.266+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:15.211+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:15.339+09:00","@version":"1","message":"Finished Spring Data repository scanning in 107 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:16.423+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:16.448+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:16.451+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:16.451+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:16.786+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:16.787+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3446 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:17.234+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:58:17.769+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:17.969+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:18.450+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:18.622+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:19.479+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:19.512+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:20.473+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:20.483+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:21.745+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T20:58:22.399+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:22.416+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:22.437+09:00","@version":"1","message":"Started OrderApiApplication in 10.597 seconds (JVM running for 12.125)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:22.622+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:58:22.799+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:58:31.052+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:31.057+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:31.059+09:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T20:58:31.486+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:58:31.693+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T20:59:23.527+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T20:59:23.808+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:00:24.229+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:00:24.400+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:01:24.884+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:01:24.996+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:02:25.395+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:02:25.493+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:03:10.310+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:10.348+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:10.444+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:10.488+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Product\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T21:03:23.590+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 14442 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:23.600+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:24.689+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:24.774+09:00","@version":"1","message":"Finished Spring Data repository scanning in 78 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.491+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.498+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.499+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.499+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.620+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.621+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1964 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:25.814+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:03:25.987+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:26.009+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:26.153+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:26.204+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:26.747+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:26.766+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:27.290+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:27.295+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:28.156+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:03:28.672+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:28.688+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:28.711+09:00","@version":"1","message":"Started OrderApiApplication in 6.098 seconds (JVM running for 7.48)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:03:28.892+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:03:29.061+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:04:15.518+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:15.541+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:15.562+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:21.832+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 14496 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:21.842+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:22.844+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:22.950+09:00","@version":"1","message":"Finished Spring Data repository scanning in 100 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.622+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.630+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.631+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.631+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.752+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.752+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1851 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:23.863+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:04:24.098+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:24.139+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:24.288+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:24.358+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:25.046+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:25.062+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:25.709+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:25.736+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:27.406+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:04:28.086+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:28.108+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:28.134+09:00","@version":"1","message":"Started OrderApiApplication in 7.08 seconds (JVM running for 8.141)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:04:28.316+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:04:28.533+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:05:03.210+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:03.241+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:03.282+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:08.923+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 14556 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:08.930+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:09.982+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.070+09:00","@version":"1","message":"Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.683+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.691+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.692+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.692+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.810+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.810+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1829 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:10.942+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:05:11.159+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:11.184+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:11.269+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:11.318+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:11.807+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:11.824+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:12.504+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:12.512+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:13.439+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:05:13.957+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:13.972+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:14.003+09:00","@version":"1","message":"Started OrderApiApplication in 5.817 seconds (JVM running for 6.975)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:14.274+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:05:14.437+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:05:19.647+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:19.649+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:19.687+09:00","@version":"1","message":"Completed initialization in 38 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:05:20.031+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:05:20.232+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"get%0050age%0046irst%0050roduct%0050age.data","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Category\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1055)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T21:06:08.143+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:08.178+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:08.233+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:08.263+09:00","@version":"1","message":"Disk Write of 1 failed: ","logger_name":"net.sf.ehcache.store.disk.DiskStorageFactory","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"java.io.NotSerializableException: com.brandon.domain.Category\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat java.base/java.util.ArrayList.writeObject(ArrayList.java:897)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n\tat java.base/java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:442)\n\tat net.sf.ehcache.Element.writeObject(Element.java:875)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1145)\n\tat java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1497)\n\tat java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n\tat net.sf.ehcache.util.MemoryEfficientByteArrayOutputStream.serialize(MemoryEfficientByteArrayOutputStream.java:97)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.serializeElement(DiskStorageFactory.java:403)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.write(DiskStorageFactory.java:385)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$DiskWriteTask.call(DiskStorageFactory.java:477)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$PersistentDiskWriteTask.call(DiskStorageFactory.java:1071)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory$IndexWriteTask.call(DiskStorageFactory.java:1108)\n\tat net.sf.ehcache.store.disk.DiskStorageFactory.unbind(DiskStorageFactory.java:921)\n\tat net.sf.ehcache.store.disk.DiskStore.dispose(DiskStore.java:664)\n\tat net.sf.ehcache.store.CacheStore.dispose(CacheStore.java:342)\n\tat net.sf.ehcache.Cache.dispose(Cache.java:2587)\n\tat net.sf.ehcache.CacheManager.shutdown(CacheManager.java:1548)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n"}
{"@timestamp":"2022-05-31T21:06:55.659+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 14656 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:55.671+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:56.933+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.056+09:00","@version":"1","message":"Finished Spring Data repository scanning in 98 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.767+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.776+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.776+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.777+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.900+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:57.900+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2178 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:58.051+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:06:58.263+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:58.290+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:58.368+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:58.418+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:59.078+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:59.096+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:59.628+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:06:59.633+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:00.518+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:07:01.047+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:01.061+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:01.090+09:00","@version":"1","message":"Started OrderApiApplication in 6.417 seconds (JVM running for 7.555)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:01.273+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:07:01.465+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:07:08.826+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:08.854+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:08.986+09:00","@version":"1","message":"Completed initialization in 121 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:09.596+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:07:20.263+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:07:30.987+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        vendor1_.vendor_id as vendor_i1_6_1_,\n        category2_.category_id as category1_0_2_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        vendor1_.email as email2_6_1_,\n        vendor1_.name as name3_6_1_,\n        category2_.name as name2_0_2_ \n    from\n        product product0_ \n    left outer join\n        vendor vendor1_ \n            on product0_.vendor_id=vendor1_.vendor_id \n    left outer join\n        category category2_ \n            on product0_.category_id=category2_.category_id \n    order by\n        product0_.product_id desc limit ?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:07:37.400+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:37.425+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:07:37.475+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:21.136+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 15056 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:21.144+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.147+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.226+09:00","@version":"1","message":"Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.857+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.865+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.865+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.865+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.976+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:22.977+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1781 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:23.110+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:14:23.431+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:23.460+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:23.546+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:23.597+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:24.158+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:24.168+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:24.696+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:24.702+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:25.646+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:14:26.214+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:26.233+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:26.262+09:00","@version":"1","message":"Started OrderApiApplication in 5.999 seconds (JVM running for 7.091)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:26.408+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:14:26.590+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-31T21:14:51.840+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:51.856+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:51.884+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:56.728+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 15090 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:56.735+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:57.680+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:57.751+09:00","@version":"1","message":"Finished Spring Data repository scanning in 63 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.378+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.385+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.385+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.386+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.488+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.489+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1708 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.599+09:00","@version":"1","message":"Configuration problem for cache getPageFirstProductPage: MaxEntriesLocalHeap equal or greater than MaxEntriesLocalDisk. This will result in useless disk storage.","logger_name":"net.sf.ehcache.config.CacheConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:14:58.803+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.832+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.901+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:14:58.949+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:04.574+09:00","@version":"1","message":"HikariPool-1 - Exception during pool initialization.","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:745)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:420)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:307)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1317)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)\n\tat com.brandon.OrderApiApplication.main(OrderApiApplication.java:15)\nCaused by: com.mysql.cj.exceptions.CJException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:124)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:153)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:49)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:447)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:212)\n\tat com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1433)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:133)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)\n\t... 50 common frames omitted\nCaused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:130)\n\t... 56 common frames omitted\n"}
{"@timestamp":"2022-05-31T21:15:04.581+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:745)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:420)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:307)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1317)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)\n\tat com.brandon.OrderApiApplication.main(OrderApiApplication.java:15)\nCaused by: com.mysql.cj.exceptions.CJException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:124)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:153)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:49)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:447)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:212)\n\tat com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1433)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:133)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)\n\t... 50 common frames omitted\nCaused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:130)\n\t... 56 common frames omitted\n"}
{"@timestamp":"2022-05-31T21:15:04.596+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:05.266+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:05.275+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:06.304+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:15:06.898+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:06.923+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:06.941+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:06.944+09:00","@version":"1","message":"Started OrderApiApplication in 10.881 seconds (JVM running for 11.778)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-31T21:15:12.351+09:00","@version":"1","message":"HikariPool-1 - Exception during pool initialization.","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"scheduling-1","level":"ERROR","level_value":40000,"stack_trace":"java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n\tat org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)\n\tat org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.brandon.batch.DailyCloseOrderBatch$$EnhancerBySpringCGLIB$$e7227b22.closeOrder(<generated>)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)\n\tat org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: com.mysql.cj.exceptions.CJException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:124)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:153)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:49)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:447)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:212)\n\tat com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1433)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:133)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)\n\t... 42 common frames omitted\nCaused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:130)\n\t... 48 common frames omitted\n"}
{"@timestamp":"2022-05-31T21:15:12.356+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08001","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"scheduling-1","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-31T21:15:12.356+09:00","@version":"1","message":"Could not create connection to database server. Attempted reconnect 3 times. Giving up.","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"scheduling-1","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-31T21:15:12.360+09:00","@version":"1","message":"Unexpected error occurred in scheduled task","logger_name":"org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler","thread_name":"scheduling-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:467)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.brandon.batch.DailyCloseOrderBatch$$EnhancerBySpringCGLIB$$e7227b22.closeOrder(<generated>)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)\n\tat org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection\n\tat org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:111)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:138)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getConnectionForTransactionManagement(LogicalConnectionManagedImpl.java:276)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:284)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)\n\tat org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)\n\tat org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)\n\t... 21 common frames omitted\nCaused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)\n\tat org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:38)\n\tat org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:108)\n\t... 28 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:124)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:153)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:49)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.proceedHandshakeWithPluggableAuthentication(NativeAuthenticationProvider.java:447)\n\tat com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:212)\n\tat com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1433)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:133)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)\n\t... 42 common frames omitted\nCaused by: com.mysql.cj.exceptions.UnableToConnectException: Public Key Retrieval is not allowed\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85)\n\tat com.mysql.cj.protocol.a.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:130)\n\t... 48 common frames omitted\n"}
{"@timestamp":"2022-05-31T21:15:16.204+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
