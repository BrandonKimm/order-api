{"@timestamp":"2022-05-30T16:40:12.231+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 9098 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:12.241+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.042+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.118+09:00","@version":"1","message":"Finished Spring Data repository scanning in 69 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.744+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.756+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.757+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.757+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.928+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:13.931+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1645 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:14.182+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:14.214+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:14.310+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:40:14.375+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:13.083+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 9193 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:13.090+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.071+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.159+09:00","@version":"1","message":"Finished Spring Data repository scanning in 79 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.852+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.860+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.860+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.861+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.969+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:14.970+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1836 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:15.197+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:15.226+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:15.306+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:15.352+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:15.519+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:15.528+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:16.039+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:16.044+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:16.909+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-30T16:42:17.422+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:17.438+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:17.461+09:00","@version":"1","message":"Started OrderApiApplication in 5.171 seconds (JVM running for 6.259)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:17.547+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:42:17.723+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:42:17.788+09:00","@version":"1","message":"Attempting to connect to: [34.64.89.15:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:17.883+09:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#64cdc310:0/SimpleConnection@1e55afb3 [delegate=amqp://guest@34.64.89.15:5672/, localPort= 58784]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:42:18.094+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:42:18.127+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:42:18.134+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:42:18.141+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:43:18.254+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:43:18.308+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T16:43:49.804+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:43:49.811+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T16:43:49.830+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:34.028+09:00","@version":"1","message":"Starting OrderApiApplication using Java 11.0.12 on Brandonui-MacBookAir.local with PID 9853 (/Users/brandon/IdeaProjects/order-api/out/production/classes started by brandon in /Users/brandon/IdeaProjects/order-api)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:34.035+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:35.176+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:35.267+09:00","@version":"1","message":"Finished Spring Data repository scanning in 84 ms. Found 6 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:35.886+09:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:35.892+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:35.892+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:35.893+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.63]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.000+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.001+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1917 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.223+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.247+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 5.6.9.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.326+09:00","@version":"1","message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}","logger_name":"org.hibernate.annotations.common.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.371+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.610+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:36.621+09:00","@version":"1","message":"HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:37.113+09:00","@version":"1","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:37.118+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:37.954+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2022-05-30T22:53:38.435+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:38.454+09:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:38.473+09:00","@version":"1","message":"Started OrderApiApplication in 5.246 seconds (JVM running for 6.338)","logger_name":"com.brandon.OrderApiApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:53:38.674+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:53:38.794+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:54:39.419+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:54:39.483+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:55:39.713+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:55:39.779+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:55:39.972+09:00","@version":"1","message":"Attempting to connect to: [34.64.89.15:5672]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:55:40.276+09:00","@version":"1","message":"Created new connection: rabbitConnectionFactory#64cdc310:0/SimpleConnection@23a65475 [delegate=amqp://guest@34.64.89.15:5672/, localPort= 58980]","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","thread_name":"scheduling-1","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:55:40.336+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:55:40.349+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:55:40.357+09:00","@version":"1","message":"\n    update\n        orders \n    set\n        member_id=?,\n        order_date=?,\n        order_status=? \n    where\n        order_id=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:40.546+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:40.598+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:55.462+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:56:55.464+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:56:55.478+09:00","@version":"1","message":"Completed initialization in 14 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T22:56:55.774+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:55.856+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:55.914+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.303+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.312+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.354+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.362+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.395+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.402+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.428+09:00","@version":"1","message":"\n    insert \n    into\n        orders\n        (member_id, order_date, order_status, order_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.441+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.451+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.459+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:56:56.753+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:40.824+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:40.881+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.453+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.537+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.596+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.653+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.662+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.974+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:54.982+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.018+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.025+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.054+09:00","@version":"1","message":"\n    insert \n    into\n        orders\n        (member_id, order_date, order_status, order_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.064+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.073+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.081+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:57:55.090+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:58:41.117+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:58:41.169+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:59:41.400+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T22:59:41.451+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:00:41.717+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:00:41.770+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:01:42.012+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:01:42.195+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:02:42.831+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:02:42.927+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:03:43.108+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:03:43.230+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:04:43.388+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:04:43.453+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:05:43.678+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:05:43.764+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:05:58.933+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:05:59.140+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:05:59.539+09:00","@version":"1","message":"요청하신 데이터는 잘못 된 데이터 입니다. (요청하신 상품 ID: 10)","logger_name":"com.brandon.exception.ResourceNotFoundException","thread_name":"http-nio-8080-exec-6","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-30T23:06:17.276+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:06:17.346+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:06:17.383+09:00","@version":"1","message":"요청하신 데이터는 잘못 된 데이터 입니다. (요청하신 상품 ID: 12)","logger_name":"com.brandon.exception.ResourceNotFoundException","thread_name":"http-nio-8080-exec-8","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-30T23:06:43.985+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:06:44.057+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.012+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.104+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.174+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.513+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.525+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.576+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.587+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.621+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.636+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.715+09:00","@version":"1","message":"\n    insert \n    into\n        orders\n        (member_id, order_date, order_status, order_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:28.760+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:29.039+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:29.053+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:29.068+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:43.865+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:43.917+09:00","@version":"1","message":"요청하신 데이터는 잘못 된 데이터 입니다. (요청하신 멤버 ID: 3)","logger_name":"com.brandon.exception.ResourceNotFoundException","thread_name":"http-nio-8080-exec-1","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-30T23:07:44.356+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:44.386+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:50.128+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:07:50.163+09:00","@version":"1","message":"요청하신 데이터는 잘못 된 데이터 입니다. (요청하신 멤버 ID: 0)","logger_name":"com.brandon.exception.ResourceNotFoundException","thread_name":"http-nio-8080-exec-3","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-30T23:08:01.760+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:01.819+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:01.892+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.219+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.227+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.258+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.268+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.299+09:00","@version":"1","message":"\n    select\n        next_val as id_val \n    from\n        hibernate_sequence for update\n            ","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.306+09:00","@version":"1","message":"\n    update\n        hibernate_sequence \n    set\n        next_val= ? \n    where\n        next_val=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.341+09:00","@version":"1","message":"\n    insert \n    into\n        orders\n        (member_id, order_date, order_status, order_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.349+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.359+09:00","@version":"1","message":"\n    insert \n    into\n        order_product\n        (order_id, product_id, product_order_quantity, order_product_id) \n    values\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.368+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:02.387+09:00","@version":"1","message":"\n    update\n        product \n    set\n        category_id=?,\n        name=?,\n        price=?,\n        stock_quantity=?,\n        vendor_id=? \n    where\n        product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:07.965+09:00","@version":"1","message":"\n    select\n        member0_.member_id as member_i1_1_0_,\n        member0_.address as address2_1_0_,\n        member0_.email as email3_1_0_,\n        member0_.name as name4_1_0_ \n    from\n        member member0_ \n    where\n        member0_.member_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:08.034+09:00","@version":"1","message":"\n    select\n        product0_.product_id as product_1_4_0_,\n        product0_.category_id as category5_4_0_,\n        product0_.name as name2_4_0_,\n        product0_.price as price3_4_0_,\n        product0_.stock_quantity as stock_qu4_4_0_,\n        product0_.vendor_id as vendor_i6_4_0_,\n        category1_.category_id as category1_0_1_,\n        category1_.name as name2_0_1_,\n        vendor2_.vendor_id as vendor_i1_6_2_,\n        vendor2_.email as email2_6_2_,\n        vendor2_.name as name3_6_2_ \n    from\n        product product0_ \n    left outer join\n        category category1_ \n            on product0_.category_id=category1_.category_id \n    left outer join\n        vendor vendor2_ \n            on product0_.vendor_id=vendor2_.vendor_id \n    where\n        product0_.product_id=?","logger_name":"org.hibernate.SQL","thread_name":"http-nio-8080-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:08.104+09:00","@version":"1","message":"재고수량보다 더 많은 주문수량입니다. (현 재고수량: 8821 주문수량: 2000000)","logger_name":"com.brandon.exception.NotEnoughStockException","thread_name":"http-nio-8080-exec-6","level":"ERROR","level_value":40000}
{"@timestamp":"2022-05-30T23:08:44.652+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:08:44.699+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:09:44.963+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:09:45.042+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:10:45.243+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:10:45.319+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:11:45.561+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:11:45.631+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:12:45.828+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:12:45.872+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:13:46.131+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:13:46.210+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:14:46.428+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:14:46.470+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:15:46.747+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:15:46.795+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:16:47.020+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:16:47.073+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:17:47.303+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:17:47.357+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:18:47.605+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:18:47.647+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:19:47.900+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:19:47.960+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:20:48.197+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:20:48.248+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:21:48.485+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:21:48.527+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:22:48.776+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:22:48.827+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:23:49.075+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:23:49.117+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:24:49.362+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:24:49.388+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:25:49.666+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:25:49.717+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:26:49.978+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:26:50.010+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:27:50.272+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:27:50.335+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:28:50.558+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:28:50.626+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:29:50.839+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:29:50.881+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:30:51.137+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:30:51.195+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:31:51.429+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:31:51.476+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:32:51.728+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:32:51.769+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:33:52.018+09:00","@version":"1","message":"\n    select\n        order0_.order_id as order_id1_3_,\n        order0_.member_id as member_i4_3_,\n        order0_.order_date as order_da2_3_,\n        order0_.order_status as order_st3_3_ \n    from\n        orders order0_ \n    where\n        order0_.order_date between ? and ?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:33:52.054+09:00","@version":"1","message":"\n    select\n        vendor4_.vendor_id as col_0_0_,\n        vendor4_.name as col_1_0_,\n        vendor4_.email as col_2_0_,\n        member1_.member_id as col_3_0_,\n        member1_.name as col_4_0_,\n        member1_.address as col_5_0_,\n        product3_.product_id as col_6_0_,\n        product3_.name as col_7_0_,\n        product3_.price as col_8_0_,\n        sum(orderprodu2_.product_order_quantity) as col_9_0_,\n        sum(orderprodu2_.product_order_quantity*product3_.price) as col_10_0_ \n    from\n        orders order0_ \n    inner join\n        member member1_ \n            on order0_.member_id=member1_.member_id \n    inner join\n        order_product orderprodu2_ \n            on order0_.order_id=orderprodu2_.order_id \n    inner join\n        product product3_ \n            on orderprodu2_.product_id=product3_.product_id \n    inner join\n        vendor vendor4_ \n            on product3_.vendor_id=vendor4_.vendor_id \n    where\n        (\n            order0_.order_date between ? and ?\n        ) \n        and order0_.order_status=? \n    group by\n        vendor4_.vendor_id ,\n        vendor4_.name ,\n        member1_.member_id ,\n        member1_.name ,\n        member1_.address ,\n        product3_.product_id ,\n        product3_.name ,\n        product3_.price","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2022-05-30T23:34:50.794+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T23:34:50.824+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2022-05-30T23:34:50.848+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
